#################################################################### OVERVIEW
#
#  Makefile for the GS2/AstroGK Gyrokinetic Turbulence code 
#  (requires GNU's gmake)
#
#  Makefile written by Bill Dorland and Ryusuke Numata
#
#  LAST UPDATE: 04/15/08
#
# **** TODO
#
# Environment dependencies are set by system-base makefile Makefile.$(SYSTEM)
# We provide compiler dependent definition in Makefile.$(COMPILER)
# In Makefile.$(SYSTEM), $(COMPILER) and some library, include search pathes
# may be enough. There may be no architecture dependencies.
#
# * Available Compilers (tested on limited hosts)
#
# Intel ifort
# GNU's gfortran and g95
# IBM XL Fortran xlf90
# PathScale 
# The Portland Group pgf90
# --- NAGWare
# --- Fujitsu
# --- Absoft
# --- Lahey/Fujitsu Fortran lf95
# 
# * Frequently Tested Hosts, Systems
#
# Standard Linux
# Standard Mac OS X with MacPorts
# Franklin at NERSC (Cray XT4 with PGI)
# Bassi at NERSC (IBM Power 5 with IBM XL Fortran)
# Ranger (... with Intel)
#
# * Switches:
#
# Just check if they are defined or not
# Do not set DEBUG=off to turn it off
#
DEBUG ?=
STATIC ?=
MPI ?=on
#
# * Targets:
#
#  depend: generate dependency
#  test_make: print values of variables
#  clean: clean up
#  distclean: does "make clean" + removes platform links & executables
#  tar: pack
#
############################################################# DEFAULT VALUE

PROJECT ?= gs2
#PROJECT ?= agk

UTILS=utils
GEO=geo

CPP = cpp
FC = f90
FC5 = $(FC)
CC =
LD = $(FC)
CPPFLAGS =
F90FLAGS =
F90OPTFLAGS =
LDFLAGS = $(F90FLAGS)
ARCH = ar
ARCHFLAGS = cr
RANLIB=ranlib

# work around
F90FLAGS_real_double_promote = $(F90FLAGS)
F90FLAGS_no_real_promotion = $(F90FLAGS)
F90FLAGS_without_minus_w = $(F90FLAGS)
F90FLAGS_SFX0 =
F90FLAGS_SFX1 =
F90FLAGS_SFX2 =

PLATFORM_LINKS ?= undefined

MPI_INC =
MPI_LIB =
FFT_INC =
FFT_LIB = -lfftw -lrfftw
NETCDF_INC =
NETCDF_LIB = -lnetcdf
HDF5_INC =
HDF5_LIB =

###########################################################################
DATE=$(shell date +%D | sed 's/\///g')
TOPDIR=$(CURDIR)
ifeq ($(notdir $(CURDIR)), $(UTILS))
	TOPDIR=$(subst /$(UTILS),,$(CURDIR))
endif
ifeq ($(notdir $(CURDIR)), $(GEO))
	TOPDIR=$(subst /$(GEO),,$(CURDIR))
endif
ifneq ($(TOPDIR),$(CURDIR))
	SUBDIR=true
endif
VPATH=.:$(UTILS):$(GEO):Aux
ifdef SUBDIR
	VPATH +=:..:../$(UTILS):../$(GEO)
endif
DEPEND=Makefile.depend
PERL_CMD=perl
DEPEND_CMD=fortdep

# most common include and library directories
DEFAULT_INC_LIST = . $(UTILS) $(GEO) .. ../$(UTILS) ../$(GEO) \
		/usr/include /usr/local/include \
	   	/opt/local/include /sw/include
DEFAULT_LIB_LIST =
#DEFAULT_LIB_LIST = /usr/lib /usr/local/lib \
#		/opt/local/lib /sw/lib
# This default library path list can simplify the procedure of porting,
# however, I found this (actually -L/usr/lib flag) causes an error
# when linking gs2 at bassi (RS6000 with xl fortran)
DEFAULT_INC=$(foreach tmpinc,$(DEFAULT_INC_LIST),$(shell [ -d $(tmpinc) ] && echo -I$(tmpinc)))
DEFAULT_LIB=$(foreach tmplib,$(DEFAULT_LIB_LIST),$(shell [ -d $(tmplib) ] && echo -L$(tmplib)))

########################################################## PLATFORM DEPENDENCE

# include system-dependent make variables
sinclude Makefile.$(SYSTEM)

# include Makefile.local if exists
sinclude Makefile.local

LIBS	+= $(DEFAULT_LIB) $(MPI_LIB) $(FFT_LIB) $(NETCDF_LIB) $(HDF5_LIB)
F90FLAGS+= $(F90OPTFLAGS) \
	   $(DEFAULT_INC) $(MPI_INC) $(FFT_INC) $(NETCDF_INC) $(HDF5_INC)

########################################################## MODULE DECLARATIONS

GS2MOD= constants.o prof.o mp.o gs2_layouts.o command_line.o gs2_save.o \
	text_options.o file_utils.o ran.o redistribute.o antenna_data.o antenna.o \
	gs2_reinit.o gs2_time.o convert.o fft_work.o shmem.o \
	theta_grid.o kt_grids.o dist_fn_arrays.o species.o \
	fields_arrays.o le_grids.o collisions.o gs2_transforms.o \
	nonlinear_terms.o fields_explicit.o \
	fields.o fields_implicit.o fields_test.o init_g.o check.o \
	dist_fn.o hyper.o gs2_diagnostics.o gs2_io.o netcdf_mod.o \
	run_parameters.o gs2_flux.o regression.o gs2_heating.o \
	geo.a gridgen4mod.o spl.o utils.a
#	utils/utils.a geo/geo.a utils/mds.o 
# *.a libraries must appear after any function that needs them.

AGKMOD= constants.o mp.o agk_layouts.o agk_heating_index.o command_line.o \
	agk_save.o file_utils.o agk_mem.o ran.o redistribute.o antenna_data.o \
	agk_reinit.o agk_time.o fft_work.o antenna.o \
	theta_grid.o kgrids.o dist_fn_arrays.o species.o \
	fields_arrays.o le_grids.o collisions.o agk_transforms.o \
	nonlinear_terms.o \
	fields.o fields_implicit.o init_g.o \
	dist_fn.o hyper.o agk_diagnostics.o agk_io.o netcdf_mod.o \
	run_parameters.o agk_heating.o spl.o agk_dist_io.o

INGENMOD= constants.o mp.o gs2_layouts.o command_line.o \
	text_options.o file_utils.o theta_grid.o \
	geo.a gridgen4mod.o spl.o utils.a

UTIL_OBJ = spl.o mds.o prec.o netcdf.o
GEO_OBJ = geometry.o geq.o veq.o eeq.o peq.o leq.o deq.o ideq.o
RG_OBJ = gridgen4mod.o file_utils.o mp.o command_line.o utils.a 
STUB_OBJ = radstub.o vdimstub.o mdslib.o
GEO_UOBJ = spl.o mds.o

# this should be removed. use command_line_nag, instead. (RN)
ifeq ($(CPU),LINUX)
	GS2MOD += nag_args.o
endif

LINKS_gs2 = \
	command_line.f90 mp.f90 shmem.f90 prof.f90 redistribute.f90 ran.f90 \
	gs2_layouts.f90 gs2_save.f90 gs2_transforms.f90 fft_work.f90 \
	mds.f90 check.f90
ifdef SUBDIR
LINKS_gs2 = \
	command_line.f90 mp.f90 shmem.f90 prof.f90 redistribute.f90 ran.f90 \
	gs2_layouts.f90 gs2_save.f90 gs2_transforms.f90 fft_work.f90 \
	../mds.f90 check.f90
endif

LINKS_agk = \
	command_line.f90 mp.f90 ran.f90 agk_save.f90 agk_transforms.f90 \
        fft_work.f90 file_utils.f90 agk_dist_io.f90

######################################################################## RULES

.SUFFIXES:
.SUFFIXES: .f90 .o

.f90.o: 
	$(FC) $(F90FLAGS) -c $<

###################################################################### TARGETS

ifeq ($(PLATFORM_LINKS),undefined)
$(error PLATFORM_LINKS is $(PLATFORM_LINKS))
endif

.DEFAULT_GOAL = $(PROJECT)_all
ifeq ($(notdir $(CURDIR)),utils)
	.DEFAULT_GOAL = utils_all
endif
ifeq ($(notdir $(CURDIR)),geo)
	.DEFAULT_GOAL = geo_all
endif

.PHONY: all gs2_all agk_all

all: $(.DEFAULT_GOAL)

gs2_all: $(LINKS_gs2) modules gs2 ingen rungridgen

gs2: gs2.o $(GS2MOD) 
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

gs2.x: gs2.o $(GS2MOD) 
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

agk_all: $(LINKS_agk) agk

agk: agk.o $(AGKMOD) 
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

agk.x: agk.o $(AGKMOD) 
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

ingen: ingen.o $(INGENMOD)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

rungridgen: rungridgen.o $(RG_OBJ)
	$(LD) $(LDFLAGS) -o $@ $^

regress: regression.o drive.o
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

# libraries and functions in subdirectories:
# ??? Code bombs on Ultrix Alpha on test case s1a.in...

.PHONY: modules utils_all geo_all

modules: utils.a geo.a

### UTILS
utils_all: utils.a mdslib.a

utils.a: $(UTIL_OBJ)
	$(ARCH) $(ARCHFLAGS) $@ $^
	$(RANLIB) $@

mdslib.a: mdslib.o
	$(AR) rc $@ $^
	$(RANLIB) $@

### GEO
geo_all: geo.a eiktest ball

geo.a: $(STUB_OBJ) $(GEO_OBJ)
	$(AR) rc $@ $(GEO_OBJ) $(STUB_OBJ)
	$(RANLIB) $@

ball: ball.o geo.a $(GEO_UOBJ) $(STUBS)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

eiktest: et.o geo.a $(GEO_UOBJ) $(STUBS)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

################################################################ SPECIAL RULES

# HDF5 needs specific compiler
agk_dist_io.o: agk_dist_io.f90
	$(FC5) $(F90FLAGS) -c $<

# le_grids needs quad precision on some hosts
le_grids.o: le_grids.f90
	$(FC) $(F90FLAGS_real_double_promote) -c $<
# mds neeeds quad precision on some hosts
mds.o: mds.f90
	$(FC) $(F90FLAGS_real_double_promote) -c $<

# No optimizations for some routines: stupid workarounds because of 
# incompatibility between f95 and my C libraries (I think)

# NAG: without -w
gs2_transforms.o: gs2_transforms.f90
	$(FC) $(F90FLAGS_without_minus_w) $(F90FLAGS_SFX0) -c $<
agk_transforms.o: agk_transforms.f90
	$(FC) $(F90FLAGS_without_minus_w) $(F90FLAGS_SFX0) -c $<
nonlinear_terms.o: nonlinear_terms.f90
	$(FC) $(F90FLAGS_without_minus_w) -c $<

# NAG: without -r8
netcdf_mod.o: netcdf_mod.f90
	$(FC) $(F90FLAGS_no_real_promotion) $(F90FLAGS_SFX2) -c $<

# Absoft: needs special treatment for suffix(?)
gs2_io.o: gs2_io.f90
	$(FC) $(F90FLAGS) $(F90FLAGS_SFX2) -c $<
gs2_save.o: gs2_save.f90
	$(FC) $(F90FLAGS) $(F90FLAGS_SFX2) -c $<
agk_io.o: agk_io.f90
	$(FC) $(F90FLAGS) $(F90FLAGS_SFX2) -c $<
agk_save.o: agk_save.f90
	$(FC) $(F90FLAGS) $(F90FLAGS_SFX2) -c $<
#netcdf_mod.o: netcdf_mod.f90
#	$(FC) $(F90FLAGS) $(F90FLAGS_SFX2) -c $<

command_line.o: command_line.f90
	$(FC) $(F90FLAGS) $(F90FLAGS_SFX1) -c $<
file_utils.o: file_utils.f90
	$(FC) $(F90FLAGS) $(F90FLAGS_SFX1) -c $<
mp.o: mp.f90
	$(FC) $(F90FLAGS) $(F90FLAGS_SFX1) -c $<

fft_work.o: fft_work.f90
	$(FC) $(F90FLAGS) $(F90FLAGS_SFX0) -c $<
#gs2_transforms.o: gs2_transforms.f90
#	$(FC) $(F90FLAGS) $(F90FLAGS_SFX0) -c $<
#agk_transforms.o: agk_transforms.f90
#	$(FC) $(F90FLAGS) $(F90FLAGS_SFX0) -c $<

############################################################## MORE DIRECTIVES

.PHONY: depend clean distclean tar test_make

# this dependency does not appear for some PLATFORM_LINKS
check.o: run_parameters.o
depend:
	$(MAKE) -C $(TOPDIR) -f Makefile.new $(PLATFORM_LINKS)
	$(DEPEND_CMD) -d $(DEPEND) -1 -o $(VPATH)
include $(DEPEND)

clean:
	-rm -f *.o *.mod *.g90 core */core

distclean: unlink clean
	-rm -f $(PROJECT)
	-rm -f *.a
	-rm -f ingen rungridgen regress
	-rm -f ball eiktest

tar: tar_$(PROJECT)

tar_gs2:
	@echo $(PROJECT)_$(DATE) > .package
	@-rm -rf `cat .package`
	@mkdir `cat .package`
	@for dir in utils geo Makefiles ;\
	do ( mkdir `cat .package`/$$dir ; ) ;\
	done
	@for name in *.f90 test_os Makefile Makefile.* \
		utils/*.f90 utils/Makefile \
		geo/*.f90 geo/Makefile \
		Makefiles/*; \
	do (ln $$name `cat .package`/$$name ; ); \
	done
	tar cvf - `cat .package` | bzip2 -9 > `cat .package`.tar.bz2
	@rm -rf `cat .package` .package

tar_agk:
	@echo $(PROJECT)_$(DATE) > .package
	@-rm -rf `cat .package`
	@mkdir `cat .package`
	@ln *.f90 test_os Makefile AstroGK.in `cat .package`
	tar cvf - `cat .package` | bzip2 -9 > `cat .package`.tar.bz2
	@rm -rf `cat .package` .package

test_make:
	@echo SYSTEM is $(SYSTEM)
	@echo .DEFAULT_GOAL is $(.DEFAULT_GOAL)
	@echo VPATH is $(VPATH)
	@echo CURDIR is $(CURDIR)
	@echo TOPDIR is $(TOPDIR)
	@echo MPI is $(MPI)
	@echo DEBUG is $(DEBUG)
	@echo STATIC is $(STATIC)
	@echo PLATFORM_LINKS is $(PLATFORM_LINKS)
	@echo FC is $(FC)
	@echo FC5 is $(FC5)
	@echo LD is $(LD)
	@echo DIST_IO is $(DIST_IO)
	@echo F90FLAGS is $(F90FLAGS)
	@echo LIBS is $(LIBS)
	@echo LDFLAGS is $(LDFLAGS)

############################################################### PLATFORM LINKS
#
# If one of the platform-specific logical links doesn't exist, set them up:
#
# this target works only on the top directory where Makefile.new exists
$(LINKS_$(PROJECT)):
	@$(MAKE) -C $(TOPDIR) -f Makefile.new --no-print-directory $(PLATFORM_LINKS)

#
# Platform-specific logical links:
#
cxt4: cxt4_$(PROJECT)
cxt4_gs2:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf gs2_save_aix.f90 gs2_save.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_aix.f90 check.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90 
cxt4_agk:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf agk_transforms_fftw.f90 agk_transforms.f90
	ln -sf agk_save_aix.f90 agk_save.f90
	ln -sf $(DIST_IO) agk_dist_io.f90

c90: c90_$(PROJECT)
c90_gs2:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_stub.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_sgi.f90 check.f90
	ln -sf ran_cray.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf fft_work_unicos.f90 fft_work.f90
	ln -sf gs2_transforms_sgi.f90 gs2_transforms.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90 

t3e_shmem: t3e_shmem_$(PROJECT)
t3e_shmem_gs2:
	ln -sf command_line_posix.f90 command_line.f90
	ln -sf mp_mpi.f90 mp.f90
	ln -sf shmem_cray.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_shnew.f90 redistribute.f90
	ln -sf check_sgi.f90 check.f90
	ln -sf ran_cray.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf fft_work_unicosmk.f90 fft_work.f90
	ln -sf gs2_transforms_sgi.f90 gs2_transforms.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90

t3e: t3e_$(PROJECT)
t3e_gs2:
	ln -sf command_line_posix.f90 command_line.f90
	ln -sf mp_mpi.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_sgi.f90 check.f90
	ln -sf ran_cray.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf fft_work_unicosmk.f90 fft_work.f90
	ln -sf gs2_transforms_sgi.f90 gs2_transforms.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90 

t3e_fftw: t3e_fftw_$(PROJECT)
t3e_fftw_gs2:
	ln -sf command_line_posix.f90 command_line.f90
	ln -sf mp_mpi.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_shnew.f90 redistribute.f90
	ln -sf check_sgi.f90 check.f90
	ln -sf ran_cray.f90 ran.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90

ibm: ibm_$(PROJECT)
ibm_gs2:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_aix.f90 check.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf file_utils_xlf.f90 file_utils.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf gs2_save_aix.f90 gs2_save.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90
ibm_agk:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf file_utils_xlf.f90 file_utils.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf agk_transforms_fftw.f90 agk_transforms.f90
	ln -sf agk_save_aix.f90 agk_save.f90
	ln -sf $(DIST_IO) agk_dist_io.f90

origin: origin_$(PROJECT)
origin_gs2:
	ln -sf command_line_posix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_sgi.f90 check.f90
	ln -sf ran_cray.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf fft_work_origin.f90 fft_work.f90
	ln -sf gs2_transforms_sgi.f90 gs2_transforms.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90

linux: linux_$(PROJECT)
linux_gs2:
	ln -sf command_line_nag.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_portable.f90 check.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90
linux_agk:
	ln -sf command_line_nag.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf agk_save_fast.f90 agk_save.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf agk_transforms_fftw.f90 agk_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf agk_dist_io_stub.f90 agk_dist_io.f90

linux_ifort: linux_ifort_$(PROJECT)
linux_ifort_gs2:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_stub.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_portable.f90 check.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90

linux_fuj: linux_fuj_$(PROJECT)
linux_fuj_gs2:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_stub.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_portable.f90 check.f90
	ln -sf ran_local.f90 ran.f90
#	ln -sf gs2_save_stub.f90 gs2_save.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf gs2_transforms_stub.f90 gs2_transforms.f90
	ln -sf fft_work_stub.f90 fft_work.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90
linux_fuj_agk:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_stub.f90 mp.f90
	ln -sf ran_local.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf agk_save_fast.f90 agk_save.f90
	ln -sf agk_transforms_stub.f90 agk_transforms.f90
	ln -sf fft_work_stub.f90 fft_work.f90
	ln -sf agk_dist_io_stub.f90 agk_dist_io.f90

linux_lf95: linux_lf95_$(PROJECT)
linux_lf95_gs2:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_portable.f90 check.f90
	ln -sf ran_portable.f90 ran.f90
#	ln -sf gs2_save_stub.f90 gs2_save.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90
linux_lf95_agk:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf agk_save_fast.f90 agk_save.f90
	ln -sf agk_transforms_fftw.f90 agk_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf agk_dist_io_stub.f90 agk_dist_io.f90

linux_abs: linux_abs_$(PROJECT)
linux_abs_gs2:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_portable.f90 check.f90
	ln -sf ran_local.f90 ran.f90
#	ln -sf gs2_save_stub.f90 gs2_save.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90
linux_abs_agk:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf ran_local.f90 ran.f90
	ln -sf agk_save_fast.f90 agk_save.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf agk_transforms_fftw.f90 agk_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf agk_dist_io_stub.f90 agk_dist_io.f90

alpha: alpha_$(PROJECT)
alpha_gs2:
	ln -sf command_line_alpha.f90 command_line.f90
	ln -sf mp_stub.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf ran_local.f90 ran.f90
	ln -sf check_portable.f90 check.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90

alpha_nag: alpha_nag_$(PROJECT)
alpha_nag_gs2:
	ln -sf command_line_nag.f90 command_line.f90
	ln -sf mp_stub.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_portable.f90 check.f90
	ln -sf ran_local.f90 ran.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90

linux_alpha: linux_alpha_$(PROJECT)
linux_alpha_gs2:
	ln -sf command_line_alpha.f90 command_line.f90
	ln -sf mp_stub.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_portable.f90 check.f90
	ln -sf ran_local.f90 ran.f90
#	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf gs2_save_stub.f90 gs2_save.f90
#	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf gs2_transforms_stub.f90 gs2_transforms.f90
	ln -sf file_utils_portable.f90 file_utils.f90
#	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf fft_work_stub.f90 fft_work.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90

linux_nomp: linux_nomp_$(PROJECT)
linux_nomp_agk:
	ln -sf command_line_unix.f90 command_line.f90
	ln -sf mp_stub.f90 mp.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf file_utils_portable.f90 file_utils.f90
	ln -sf agk_save_fast.f90 agk_save.f90
	ln -sf agk_transforms_fftw.f90 agk_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf agk_dist_io_stub.f90 agk_dist_io.f90

darwin: darwin_$(PROJECT)
darwin_gs2:
	ln -sf command_line_darwin.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf shmem_stub.f90 shmem.f90
	ln -sf prof_none.f90 prof.f90
	ln -sf redistribute_mpi.f90 redistribute.f90
	ln -sf check_portable.f90 check.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf gs2_save_fast.f90 gs2_save.f90
	ln -sf file_utils_gnu.f90 file_utils.f90
	ln -sf gs2_transforms_fftw.f90 gs2_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf gs2_dist_io_stub.f90 gs2_dist_io.f90
	ln -sf $(UTILS)/mds_io_stub.f90 mds.f90
darwin_agk:
	ln -sf command_line_darwin.f90 command_line.f90
	ln -sf mp_mpi_r8.f90 mp.f90
	ln -sf ran_portable.f90 ran.f90
	ln -sf file_utils_gnu.f90 file_utils.f90
	ln -sf agk_save_fast.f90 agk_save.f90
	ln -sf agk_transforms_fftw.f90 agk_transforms.f90
	ln -sf fft_work_fftw.f90 fft_work.f90
	ln -sf agk_dist_io_stub.f90 agk_dist_io.f90

unlink:	unlink_$(PROJECT)
unlink_gs2:
	-rm -f $(TOPDIR)/command_line.f90
	-rm -f $(TOPDIR)/mp.f90
	-rm -f $(TOPDIR)/shmem.f90
	-rm -f $(TOPDIR)/prof.f90
	-rm -f $(TOPDIR)/redistribute.f90
	-rm -f $(TOPDIR)/ran.f90
	-rm -f $(TOPDIR)/$(PROJECT)_save.f90
	-rm -f $(TOPDIR)/$(PROJECT)_transforms.f90
	-rm -f $(TOPDIR)/fft_work.f90
	-rm -f $(TOPDIR)/check.f90 
	-rm -f $(TOPDIR)/file_utils.f90
	-rm -f $(TOPDIR)/$(PROJECT)_dist_io.f90
	-rm -f $(TOPDIR)/mds.f90

unlink_agk:
	-rm -f $(TOPDIR)/command_line.f90
	-rm -f $(TOPDIR)/mp.f90
	-rm -f $(TOPDIR)/ran.f90
	-rm -f $(TOPDIR)/$(PROJECT)_save.f90
	-rm -f $(TOPDIR)/$(PROJECT)_transforms.f90
	-rm -f $(TOPDIR)/fft_work.f90
	-rm -f $(TOPDIR)/file_utils.f90
	-rm -f $(TOPDIR)/$(PROJECT)_dist_io.f90
