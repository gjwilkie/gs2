!==============================================================================
!  		GS2 INPUT FILE automatically generated by CodeRunner 
!==============================================================================
!
!  GS2 is a gyrokinetic flux tube initial value turbulence code 
!  which can be used for fusion or astrophysical plasmas.
!  
!  	See http://gyrokinetics.sourceforge.net
!
!  CodeRunner is a framework for the automated running and analysis 
!  of large simulations. 
!
!  	See http://coderunner.sourceforge.net
!      by CodeRunner version 0.12.4.0
!
!==============================================================================

!==============================
!GENERAL PARAMETERS  
!==============================
&parameters
 beta = 0.0 ! Ratio of particle to magnetic pressure (reference Beta, not total beta):  beta=n_0 T_0 /( B^2 / (8 pi))
/

&kt_grids_knobs
 grid_option = "single" ! The general layout of the perpendicular grid.
/

!==============================
!  
!==============================
&kt_grids_box_parameters
 nx = 32 ! The number of kx modes: the number of kx modes actually simulated (ntheta0) is equal to 2*(nx - 1)/3 + 1, due to the need to prevent aliasing.
 ny = 32 ! The number of ky modes: the number of ky modes actually simulated (naky) is equal to (ny - 1)/3 + 1, due to the need to prevent aliasing.
 jtwist = 30 ! L_x = L_y  jtwist / (2 pi shat)
 y0 = 1.0 ! The length of the box in the y direction (measured in the Larmour radius of species 1)
/

!==============================
!  
!==============================
&kt_grids_single_parameters
 aky = 1.0 ! The actual value of ky rho
 akx = 0.0 
/

!==============================
!  
!==============================
&theta_grid_parameters
 ntheta = 20 ! Number of points along field line (theta) per 2 pi segment
 nperiod = 1 ! Number of 2 pi segments along equilibrium magnetic field.
 eps = 0.0 ! eps=r/R
 epsl = 0.0 ! epsl=2 a/R
 shat = 1.0e-06 ! 
 pk = 1.0 ! pk = 2 a / q R
 btor_slab = 0.0 ! Determines the angle between the field and the flow in the slab limit
/

!==============================
!  
!==============================
&theta_grid_knobs
 equilibrium_option = "s-alpha" ! Controls which geometric assumptions are used in the run.
/

!==============================
!  
!==============================
&theta_grid_salpha_knobs
 model_option = "const-curv" 
/

!==============================
!PITCH ANGLE/ENERGY GRID SETUP  
!==============================
&le_grids_knobs
 vcut = 2.5 ! No. of standard deviations from the standard Maxwellian beyond which the distribution function will be set to 0
 ngauss = 8 ! Number of untrapped pitch-angles moving in one direction along field line.
 negrid = 8 ! Total number of energy grid points
/

!==============================
!BOUNDARY CONDITIONS  
!==============================
&dist_fn_knobs
 gridfac = 1.0 ! Affects boundary condition at end of theta grid.
 boundary_option = "periodic" ! Sets the boundary condition along the field line (i.e. the boundary conditions at theta = +- pi).
 adiabatic_option = "iphi00=2" ! The form of the adiabatic response (if a species is being modeled as adiabatic).
 test = .false. ! For debugging
 g_exb = 0.0 
 btor_slab = 0.0 
 nonad_zero = .true. ! If true switches on new parallel boundary condition where h=0 at incoming boundary instead of g=0.
/

!==============================
!ALGORITHMIC CHOICES  
!==============================
&fields_knobs
 field_option = "implicit" ! Controls which time-advance algorithm is used for the linear terms.
/

!==============================
!  
!==============================
&knobs
 wstar_units = .false. ! For linear runs only. Evolves each k_y with a different timestep.
 fphi = 1.0 ! Multiplies Phi (electrostatic potential).
 fapar = 0.0 ! Multiplies A_par. Use 1 for finite beta (electromagnetic), 0 otherwise (electrostatic)
 fbpar = 0.0 ! Multiplies B_parallel. Use 1 for high beta, 0 otherwise.
 delt = 0.05 ! Time step
 nstep = 1000 ! Maximum number of timesteps
/

!==============================
!  
!==============================
&reinit_knobs
 delt_adj = 2.0 ! When the time step needs to be changed, it is adjusted 
 delt_minimum = 5.0e-07 ! The minimum time step is delt_minimum.
/

!==============================
!  
!==============================
&layouts_knobs
 layout = "lexys" ! 'yxles', 'lxyes', 'lyxes', 'lexys' Determines the way the grids are laid out in memory.
 local_field_solve = .false. ! Strongly affects initialization time on some parallel computers.
/

!==============================
!COLLISIONS  
!==============================
&collisions_knobs
 collision_model = "none" ! Collision model used in the simulation. Options: 'default', 'none', 'lorentz', 'ediffuse'
 conserve_moments = .true. 
/

!==============================
!NONLINEARITY  
!==============================
&nonlinear_terms_knobs
 nonlinear_mode = "off" ! Include nonlinear terms? ('on','off')
 cfl = 0.2 ! The maximum delt < cfl * min(Delta_perp/v_perp)
/

!==============================
!EVOLVED SPECIES  
!==============================
&species_knobs
 nspec = 1 ! Number of kinetic species evolved.
/

!==============================
!SPECIES PARAMETERS 1 
!==============================
&species_parameters_1
 z = 1.0 ! Charge
 mass = 1.0 ! Mass
 dens = 1.0 ! Density	
 temp = 1.0 ! Temperature
 tprim = 6.0 ! -1/T (dT/drho)
 fprim = 1.0 ! -1/n (dn/drho)
 uprim = 0.0 ! ?
 vnewk = 0.0 ! collisionality parameter
 type = "ion" ! Type of species, e.g. 'ion', 'electron', 'beam'
/

!==============================
! 1 
!==============================
&dist_fn_species_knobs_1
 fexpr = 0.49 ! Temporal implicitness parameter. Recommended value: 0.48
 bakdif = 0.01 ! Spatial implicitness parameter. Recommended value: 0.05
/

!==============================
!INITIAL CONDITIONS  
!==============================
&init_g_knobs
 refac = 1.0 ! Used in rare cases.
 imfac = 1.0 ! Used in rare cases.
 den0 = 0.0 ! Parameters for setting up special initial conditions.
 den1 = 1.0 ! Parameters for setting up special initial conditions.
 chop_side = .false. ! Rarely needed. Forces asymmetry into initial condition.
 width0 = -4.0 ! Initial perturbation has Gaussian envelope in theta with width width0,
 phiinit = 0.1 ! Average amplitude of initial perturbation of each Fourier mode.
 ginit_option = "noise" ! Sets the way that the distribution function is initialized.
 zf_init = 0.0 
/

!==============================
!DIAGNOSTICS  
!==============================
&gs2_diagnostics_knobs
 print_flux_line = .f. ! Instantaneous fluxes output to screen
 write_nl_flux = .true. ! Write nonlinear fluxes as a function of time.
 print_line = .false. ! Estimated frequencies and growth rates to the screen/stdout
 write_verr = .true. ! Write velocity space diagnostics to '.lpc' and '.verr' files
 write_g = F ! Write the distribution function to the '.dist' (NetCDF?)
 write_line = .true. ! If (write_ascii = T) write estimated frequencies and growth rates to the output file
  ! write_gyx not specified --- Write dist fn at a given physical spacial point to a file
 write_hrate = F ! Write heating rate, collisonal entropy generation etc to '.heat'
 write_final_epar = .true. ! If (write_ascii = T) E_parallel(theta) written to runname.eigenfunc
 write_avg_moments = .true. ! Write flux surface averaged low-order moments of g to runname.out.nc and runname.moments (if write_ascii = T)
 write_lorentzian = .true. ! Frequency Sweep Data
 write_omega = .false. ! If (write_ascii = T) instantaneous omega to output file. Very heavy output
 write_omavg = .true. ! If (write_ascii = T) time-averaged growth rate and frequency to the output file.
 write_eigenfunc = .true. ! If (write_ascii = T) Normalized phi written to runname.eigenfunc
 write_final_fields = .true. ! If (write_ascii = T) Phi(theta) written to '.fields'
 write_final_moments = .true. ! write final n, T
  ! write_parity not specified --- Writes parities in dist fn and particle fluxes
  ! nsave not specified --- Write restart files every nsave timesteps
 nwrite = 1 ! Output diagnostic data every nwrite
 navg = 10 ! Any time averages performed over navg
 omegatol = -0.001 ! The convergence has to be better than one part in 1/omegatol
 omegatinst = 500.0 ! Recommended value: 500.
 save_for_restart = .false. ! Write restart files.
  ! write_flux_line not specified --- 
  ! write_ascii not specified --- 
  ! write_kpar not specified --- 
  ! write_gs not specified --- 
  ! write_gg not specified --- 
  ! write_lpoly not specified --- 
  ! write_fields not specified --- 
  ! write_final_antot not specified --- 
  ! write_cerr not specified --- 
  ! write_max_verr not specified --- 
  ! nmovie not specified --- 
  ! igomega not specified --- 
  ! exit_when_converged not specified --- 
  ! write_full_moments_notgc not specified --- 
  ! write_cross_phase not specified --- 
  ! dump_check1 not specified --- 
  ! dump_check2 not specified --- 
  ! dump_fields_periodically not specified --- 
  ! make_movie not specified --- 
  ! write_phi_over_time not specified --- Write entire Phi field to NetCDF file every nwrite.
  ! write_apar_over_time not specified --- Write entire A_parallel field to NetCDF file every nwrite.
  ! write_bpar_over_time not specified --- Write entire B_parallel field to NetCDF file every nwrite.
  ! write_symmetry not specified --- Test the symmetry properties of the GK eqn.
  ! save_distfn not specified --- Save dist_fn with lots of detail.
  ! write_correlation_extend not specified --- Extend domain of correlation function calculation.
  ! nwrite_mult not specified --- Large datasets written every nwrite_mult * nwrite timesteps.
  ! write_correlation not specified --- Write parallel correlation.
  ! write_moments not specified --- 
  ! write_final_db not specified --- Write final delta B.
/

