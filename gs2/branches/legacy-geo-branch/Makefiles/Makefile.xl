# Compiler: IBM XL xlf/xlc

# _r means 'with thread-safe components'
#FC = xlf90
#FC = xlf90_r
#FC = xlf95 
#FC = xlf95_r
FC = xlf90_r
CC = xlc_r
F90FLAGS += -qsuffix=f=f90
CFLAGS += -DNO_UNDERSCORE
CPPFLAGS += -DFCOMPILER=_XL_

ifeq ($(CHIP),power5)
	F90FLAGS += -q64
	CFLAGS += -q64
endif

ifdef DBLE
	ifeq ($(PROJECT),agk)
		F90FLAGS += -qrealsize=8
# promotes real->dble, dble->quad
# but, does not promote if kind is explicitly specified
	endif
	ifeq ($(PROJECT),gs2)
# Note: this work around can be removed by writing the code properly
		F90FLAGS += -qautodbl=dbl4
# promotes only real->dble
		F90FLAGS_real_double_promote += $(F90FLAGS) -qautodbl=dbl
# makes real -> dble, and dble -> quad
# this option is used only for le_grids.f90 and mds.f90
	endif
endif

ifdef STATIC
	LDFLAGS += -bstatic
endif

ifdef DEBUG
	F90FLAGS += -g -C -qcheck -qflttrap -qinitauto=7FF7FFFF
	F90OPTFLAGS =
	CFLAGS += -g -C -qcheck -qflttrap
	COPTFLAGS =
	LIBS	+= # $$TRACE_MPIF
else
	ifdef OPT
		ifeq ($(OPT),aggressive)
			F90OPTFLAGS += -O4
			COPTFLAGS += -O4
		else
			F90OPTFLAGS += -O3
			COPTFLAGS += -O3
		endif
	endif
	
	ifdef OPT
		ifeq ($(CHIP),g5) # dawson
			F90OPTFLAGS += -qarch=g5 -qtune=g5
			COPTFLAGS += -qarch=g5 -qtune=g5
		endif
		ifeq ($(CHIP),bluegene_l) # IBM Blue Gene/L
#			F90OPTFLAGS += -qarch=440d -qtune=440 -qmaxmem=6400
#			F90OPTFLAGS += -qarch=440d -qtune=440
			F90OPTFLAGS += -qstrict -qarch=440d -qtune=440
			COPTFLAGS += -qstrict -qarch=440d -qtune=440
		endif
		ifeq ($(CHIP),power5) # IBM Power5 (bassi)
			F90OPTFLAGS += -qarch=auto -qtune=auto
			COPTFLAGS += -qarch=auto -qtune=auto
		endif
		ifeq ($(CHIP),auto) # bassi, ukaff1a
			F90OPTFLAGS += -qarch=auto -qtune=auto
			COPTFLAGS += -qarch=auto -qtune=auto
		endif
	endif

	ifeq ($(findstring gprof,$(PROF)),gprof)
		F90FLAGS += -pg
		CFLAGS += -pg
	endif
endif
