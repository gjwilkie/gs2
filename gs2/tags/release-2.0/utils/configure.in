dnl Process this file with autoconf to produce a configure script

AC_INIT(aborter.f)

AC_CONFIG_AUX_DIR(config ../config)

AC_SUBST(NTDIR)

AC_MSG_CHECKING(for nt)
if test -n "$NTDIR"
then
  AC_MSG_RESULT(yes: $NTDIR)
elif test -r ../nt.par
then
  NTDIR=..
  AC_MSG_RESULT(yes: $NTDIR)
else
  NTDIR=.
  AC_MSG_RESULT(no)
fi
if test "$NTDIR" = .
then :
elif test -r $NTDIR/config.cache
then
  . $NTDIR/config.cache
fi

if test -z "$NETCDFINCLUDE"
then
  AC_MSG_CHECKING(for netcdf.inc)
  for i in /usr/local/include /usr/local/netcdf/include /usr/include
  do
    if test -r $i/netcdf.inc
    then
      NETCDFINCLUDE=$i
      break
    fi
  done
  if test -z "$NETCDFINCLUDE"
  then
    AC_MSG_ERROR(cannot find netcdf.inc)
  else
    AC_MSG_RESULT($NETCDFINCLUDE/netcdf.inc)
  fi
fi

FC_PROG_F90
FC_PROG_F90_I(
[FFLAGS="$FFLAGS -I$NETCDFINCLUDE"],[
  AC_MSG_WARN(fortran does not support -I)
  ln -s $NETCDFINCLUDE/netcdf.inc .
])

AC_SUBST(LAPACK)
AC_SUBST(NAG)

LAPACK=
FC_CHECK_FLIB(sci, sgbtrf, [
], [
  FC_CHECK_FLIB(lapack, sgbtrf, [
  ],[
    LAPACK=lapack.o
  ] , -lblas,-L/usr/local/lib)
])

NAG=
# do it the stupid way
AC_MSG_CHECKING(for nag)
is_cray=no
{ if cray1; then is_cray=yes; fi } 2>/dev/null
{ if cray2; then is_cray=yes; fi } 2>/dev/null
{ if crayc90; then is_cray=yes; fi } 2>/dev/null
{ if crayj90; then is_cray=yes; fi } 2>/dev/null
if test "$is_cray" = yes
then
  FLIBS="$FLIBS -Wl\$\$NAG"
  NAG=crayonly.o
else
  FLIBS="$FLIBS -L/usr/local/lib -lnag"
  NAG="nage.o nagedum.o"
fi
AC_MSG_RESULT(ok)


AC_PROG_RANLIB

AC_OUTPUT(Makefile)
